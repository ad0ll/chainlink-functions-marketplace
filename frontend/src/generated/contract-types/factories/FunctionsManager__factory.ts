/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  Contract,
  ContractFactory,
  BigNumberish,
  ContractTransactionResponse,
  Interface,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  FunctionsManager,
  FunctionsManagerInterface,
} from "../FunctionsManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "link",
        type: "address",
      },
      {
        internalType: "address",
        name: "billingRegistryProxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "oracleProxy",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_baseFee",
        type: "uint96",
      },
      {
        internalType: "uint32",
        name: "_feeManagerCut",
        type: "uint32",
      },
      {
        internalType: "uint96",
        name: "_minimumSubscriptionDeposit",
        type: "uint96",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EmptyArgs",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySecrets",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySource",
    type: "error",
  },
  {
    inputs: [],
    name: "NoInlineSecrets",
    type: "error",
  },
  {
    inputs: [],
    name: "RequestIsAlreadyPending",
    type: "error",
  },
  {
    inputs: [],
    name: "RequestIsNotPending",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderIsNotRegistry",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newBaseFee",
        type: "uint256",
      },
    ],
    name: "BaseFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFeeManagerCut",
        type: "uint256",
      },
    ],
    name: "FeeManagerCutUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "FulfillRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "functionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "callbackFunction",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usedGas",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "FunctionCallCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "functionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "callbackFunction",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasDeposit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "baseFee",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "fee",
        type: "uint96",
      },
    ],
    name: "FunctionCalled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "functionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "category",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "subId",
            type: "uint64",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "desc",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageUrl",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "expectedArgs",
            type: "string[]",
          },
          {
            components: [
              {
                internalType: "enum Functions.Location",
                name: "codeLocation",
                type: "uint8",
              },
              {
                internalType: "enum Functions.Location",
                name: "secretsLocation",
                type: "uint8",
              },
              {
                internalType: "enum Functions.CodeLanguage",
                name: "language",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "source",
                type: "string",
              },
              {
                internalType: "bytes",
                name: "secrets",
                type: "bytes",
              },
              {
                internalType: "string[]",
                name: "args",
                type: "string[]",
              },
            ],
            internalType: "struct Functions.Request",
            name: "request",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "category",
            type: "bytes32",
          },
          {
            internalType: "uint96",
            name: "fee",
            type: "uint96",
          },
          {
            internalType: "uint96",
            name: "unlockedProfitPool",
            type: "uint96",
          },
          {
            internalType: "uint96",
            name: "lockedProfitPool",
            type: "uint96",
          },
          {
            internalType: "uint256",
            name: "functionsCalledCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFeesCollected",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "successfulResponseCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "failedResponseCount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct FunctionsManager.FunctionMetadata",
        name: "metadata",
        type: "tuple",
      },
    ],
    name: "FunctionRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newMinimumDeposit",
        type: "uint256",
      },
    ],
    name: "MinimumSubscriptionDepositUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "OCRResponse",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approveTokenSpender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorMetadata",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageUrl",
        type: "string",
      },
      {
        internalType: "string",
        name: "websiteUrl",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseFee",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "categoryNames",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum Functions.Location",
            name: "codeLocation",
            type: "uint8",
          },
          {
            internalType: "enum Functions.Location",
            name: "secretsLocation",
            type: "uint8",
          },
          {
            internalType: "enum Functions.CodeLanguage",
            name: "language",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "secrets",
            type: "bytes",
          },
          {
            internalType: "string[]",
            name: "args",
            type: "string[]",
          },
        ],
        internalType: "struct Functions.Request",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "gasLimit",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
    ],
    name: "estimateCost",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "functionId",
        type: "bytes32",
      },
      {
        internalType: "string[]",
        name: "args",
        type: "string[]",
      },
      {
        internalType: "uint32",
        name: "gasLimit",
        type: "uint32",
      },
    ],
    name: "executeRequest",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeManagerCut",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "functionId",
        type: "bytes32",
      },
    ],
    name: "forceUnlockFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "functionManagerProfitPool",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "functionMetadatas",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "subId",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "desc",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageUrl",
        type: "string",
      },
      {
        components: [
          {
            internalType: "enum Functions.Location",
            name: "codeLocation",
            type: "uint8",
          },
          {
            internalType: "enum Functions.Location",
            name: "secretsLocation",
            type: "uint8",
          },
          {
            internalType: "enum Functions.CodeLanguage",
            name: "language",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "secrets",
            type: "bytes",
          },
          {
            internalType: "string[]",
            name: "args",
            type: "string[]",
          },
        ],
        internalType: "struct Functions.Request",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "category",
        type: "bytes32",
      },
      {
        internalType: "uint96",
        name: "fee",
        type: "uint96",
      },
      {
        internalType: "uint96",
        name: "unlockedProfitPool",
        type: "uint96",
      },
      {
        internalType: "uint96",
        name: "lockedProfitPool",
        type: "uint96",
      },
      {
        internalType: "uint256",
        name: "functionsCalledCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeesCollected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "successfulResponseCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "failedResponseCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "functionResponses",
    outputs: [
      {
        internalType: "bytes32",
        name: "functionId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "callbackFunction",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "gasDeposit",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "functionsCalledCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "functionsRegisteredCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDONPublicKey",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_functionId",
        type: "bytes32",
      },
    ],
    name: "getFunctionMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "subId",
            type: "uint64",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "desc",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageUrl",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "expectedArgs",
            type: "string[]",
          },
          {
            components: [
              {
                internalType: "enum Functions.Location",
                name: "codeLocation",
                type: "uint8",
              },
              {
                internalType: "enum Functions.Location",
                name: "secretsLocation",
                type: "uint8",
              },
              {
                internalType: "enum Functions.CodeLanguage",
                name: "language",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "source",
                type: "string",
              },
              {
                internalType: "bytes",
                name: "secrets",
                type: "bytes",
              },
              {
                internalType: "string[]",
                name: "args",
                type: "string[]",
              },
            ],
            internalType: "struct Functions.Request",
            name: "request",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "category",
            type: "bytes32",
          },
          {
            internalType: "uint96",
            name: "fee",
            type: "uint96",
          },
          {
            internalType: "uint96",
            name: "unlockedProfitPool",
            type: "uint96",
          },
          {
            internalType: "uint96",
            name: "lockedProfitPool",
            type: "uint96",
          },
          {
            internalType: "uint256",
            name: "functionsCalledCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFeesCollected",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "successfulResponseCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "failedResponseCount",
            type: "uint256",
          },
        ],
        internalType: "struct FunctionsManager.FunctionMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
    ],
    name: "getFunctionResponse",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "functionId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "callbackFunction",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "gasDeposit",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "response",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "err",
            type: "bytes",
          },
        ],
        internalType: "struct FunctionsManager.FunctionResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_subscriptionId",
        type: "uint64",
      },
    ],
    name: "getSubscriptionBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "handleOracleFulfillment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumSubscriptionBalance",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumSubscriptionDeposit",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_subscriptionId",
        type: "uint64",
      },
    ],
    name: "refillSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint96",
            name: "fees",
            type: "uint96",
          },
          {
            internalType: "string",
            name: "functionName",
            type: "string",
          },
          {
            internalType: "string",
            name: "desc",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageUrl",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "expectedArgs",
            type: "string[]",
          },
          {
            internalType: "enum Functions.Location",
            name: "codeLocation",
            type: "uint8",
          },
          {
            internalType: "enum Functions.Location",
            name: "secretsLocation",
            type: "uint8",
          },
          {
            internalType: "enum Functions.CodeLanguage",
            name: "language",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "category",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "subId",
            type: "uint64",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "secrets",
            type: "bytes",
          },
        ],
        internalType: "struct FunctionsManager.FunctionsRegisterRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "registerFunction",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_baseFee",
        type: "uint96",
      },
    ],
    name: "setBaseFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_feeManagerCut",
        type: "uint32",
      },
    ],
    name: "setFeeManagerCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_minimumDeposit",
        type: "uint96",
      },
    ],
    name: "setMinimumDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "subscriptionBalances",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalFeesCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type FunctionsManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FunctionsManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FunctionsManager__factory extends ContractFactory {
  constructor(...args: FunctionsManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    link: AddressLike,
    billingRegistryProxy: AddressLike,
    oracleProxy: AddressLike,
    _baseFee: BigNumberish,
    _feeManagerCut: BigNumberish,
    _minimumSubscriptionDeposit: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      link,
      billingRegistryProxy,
      oracleProxy,
      _baseFee,
      _feeManagerCut,
      _minimumSubscriptionDeposit,
      overrides || {}
    );
  }
  override deploy(
    link: AddressLike,
    billingRegistryProxy: AddressLike,
    oracleProxy: AddressLike,
    _baseFee: BigNumberish,
    _feeManagerCut: BigNumberish,
    _minimumSubscriptionDeposit: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      link,
      billingRegistryProxy,
      oracleProxy,
      _baseFee,
      _feeManagerCut,
      _minimumSubscriptionDeposit,
      overrides || {}
    ) as Promise<
      FunctionsManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FunctionsManager__factory {
    return super.connect(runner) as FunctionsManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FunctionsManagerInterface {
    return new Interface(_abi) as FunctionsManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FunctionsManager {
    return new Contract(address, _abi, runner) as unknown as FunctionsManager;
  }
}
