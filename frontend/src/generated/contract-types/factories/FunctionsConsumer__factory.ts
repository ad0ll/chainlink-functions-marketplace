/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  FunctionsConsumer,
  FunctionsConsumerInterface,
} from "../FunctionsConsumer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EmptyArgs",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySecrets",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySource",
    type: "error",
  },
  {
    inputs: [],
    name: "NoInlineSecrets",
    type: "error",
  },
  {
    inputs: [],
    name: "RequestIsAlreadyPending",
    type: "error",
  },
  {
    inputs: [],
    name: "RequestIsNotPending",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderIsNotRegistry",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "FulfillRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "OCRResponse",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "addSimulatedRequestId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum Functions.Location",
            name: "codeLocation",
            type: "uint8",
          },
          {
            internalType: "enum Functions.Location",
            name: "secretsLocation",
            type: "uint8",
          },
          {
            internalType: "enum Functions.CodeLanguage",
            name: "language",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "secrets",
            type: "bytes",
          },
          {
            internalType: "string[]",
            name: "args",
            type: "string[]",
          },
        ],
        internalType: "struct Functions.Request",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "gasLimit",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
    ],
    name: "estimateCost",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "source",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "secrets",
        type: "bytes",
      },
      {
        internalType: "string[]",
        name: "args",
        type: "string[]",
      },
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "gasLimit",
        type: "uint32",
      },
    ],
    name: "executeRequest",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDONPublicKey",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "handleOracleFulfillment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestError",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRequestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestResponse",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "updateOracleAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100ca57601f6121b438819003918201601f19168301916001600160401b038311848410176100cf578084926020946040528339810103126100ca57516001600160a01b038116908190036100ca57600080546001600160a01b03199081169092179055331561008557339060025416176002556040516120ce90816100e68239f35b60405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c80630ca76175146100d75780631aa46f59146100d257806327714589146100cd57806330bda99d146100c857806379ba5097146100c35780638da5cb5b146100be578063bef3a2f0146100b9578063d328a91e146100b4578063d4b39175146100af578063f2fde38b146100aa578063f7023bb6146100a55763fffeb84e146100a057600080fd5b610b4f565b610b0b565b610a37565b61092b565b6107aa565b6106cc565b610612565b610547565b6104c3565b6103fb565b61035b565b6101cb565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761010e57604052565b6100dc565b90601f8019910116810190811067ffffffffffffffff82111761010e57604052565b6040519060c0820182811067ffffffffffffffff82111761010e57604052565b67ffffffffffffffff811161010e57601f01601f191660200190565b92919261017d82610155565b9161018b6040519384610113565b8294818452818301116101a8578281602093846000960137010152565b600080fd5b9080601f830112156101a8578160206101c893359101610171565b90565b346101a85760603660031901126101a85767ffffffffffffffff6024358181116101a8576101fd9036906004016101ad565b906044358181116101a8576102169036906004016101ad565b90825190811161010e576102348161022f600554610639565b6113df565b602080601f83116001146102b1575091816102a1927f7bab0ec163b5c132c72b8146ac4d6e067e82ed58f8b131150aa71c9258911562946000916102a6575b508160011b916000199060031b1c1916176005555b610291816114c1565b60405191829160043595836115ab565b0390a2005b905085015138610273565b600560005290601f1983167f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0926000905b828210610343575050927f7bab0ec163b5c132c72b8146ac4d6e067e82ed58f8b131150aa71c92589115629492600192826102a1961061032a575b5050811b01600555610288565b87015160001960f88460031b161c19169055388061031d565b80600185968294968b015181550195019301906102e2565b346101a85760003660031901126101a8576020600454604051908152f35b9181601f840112156101a85782359167ffffffffffffffff83116101a857602083818601950101116101a857565b6064359067ffffffffffffffff821682036101a857565b6024359067ffffffffffffffff821682036101a857565b6084359063ffffffff821682036101a857565b6044359063ffffffff821682036101a857565b346101a85760a03660031901126101a85767ffffffffffffffff6004358181116101a85761042d903690600401610379565b91906024358281116101a857610447903690600401610379565b939092604435928184116101a857366023850112156101a85783600401359182116101a8573660248360051b860101116101a8576104ae9561049e9561048b6103a7565b9460246104966103d5565b970193611092565b6040519081529081906020820190565b0390f35b6001600160a01b038116036101a857565b346101a85760403660031901126101a8576004356104e0816104b2565b6024356104eb610bf6565b60009181835260016020526001600160a01b0360408420541661053557610532918352600160205260408320906001600160a01b03166001600160a01b0319825416179055565b80f35b6040516345a2bd6960e11b8152600490fd5b346101a85760008060031936011261060f576001600160a01b03806003541633036105ca576002546001600160a01b0316600280546001600160a01b03191633179055906105a06001600160a01b031960035416600355565b3391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e6572000000000000000000006044820152606490fd5b80fd5b346101a85760003660031901126101a85760206001600160a01b0360025416604051908152f35b90600182811c92168015610669575b602083101461065357565b634e487b7160e01b600052602260045260246000fd5b91607f1691610648565b60005b8381106106865750506000910152565b8181015183820152602001610676565b906020916106af81518092818552858086019101610673565b601f01601f1916010190565b9060206101c8928181520190610696565b346101a85760008060031936011261060f5760405190806005546106ef81610639565b808552916001918083169081156107805750600114610725575b6104ae8561071981870382610113565b604051918291826106bb565b9250600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828410610768575050508101602001610719826104ae610709565b8054602085870181019190915290930192810161074d565b8695506104ae9693506020925061071994915060ff191682840152151560051b8201019293610709565b346101a85760008060031936011261060f576004816001600160a01b0381541660405192838092636994548f60e11b82525afa9081156108805782916107f9575b604051806104ae84826106bb565b90503d8083833e61080a8183610113565b8101906020818303126108785780519067ffffffffffffffff821161087c570181601f820112156108785780519261084184610155565b9261084f6040519485610113565b8484526020858401011161060f57506104ae926108729160208085019101610673565b386107eb565b8280fd5b8380fd5b610c4f565b359060028210156101a857565b359060018210156101a857565b90929167ffffffffffffffff80851161010e578460051b60405193602080956108ca82850182610113565b8098815201918101938085116101a85781925b8584106108ed5750505050505050565b83358581116101a857879161090584849387016101ad565b8152019301926108dd565b9080601f830112156101a8578160206101c89335910161089f565b346101a8576003196080368201126101a85760043567ffffffffffffffff918282116101a85760c09082360301126101a857610965610135565b61097182600401610885565b815261097f60248301610885565b602082015261099060448301610892565b604082015260648201358381116101a8576109b190600436918501016101ad565b606082015260848201358381116101a8576109d290600436918501016101ad565b608082015260a48201359283116101a8576109f9610a189260046104ae9536920101610910565b60a0820152610a066103be565b610a0e6103e8565b9060643592610c7f565b6040516bffffffffffffffffffffffff90911681529081906020820190565b346101a85760203660031901126101a8576001600160a01b03600435610a5c816104b2565b610a64610bf6565b16338114610ac657806001600160a01b03196003541617600355610a9f610a936002546001600160a01b031690565b6001600160a01b031690565b7fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278600080a3005b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b346101a85760203660031901126101a8576001600160a01b03600435610b30816104b2565b610b38610bf6565b166001600160a01b03196000541617600055600080f35b346101a85760008060031936011261060f576040519080600654610b7281610639565b808552916001918083169081156107805750600114610b9b576104ae8561071981870382610113565b9250600683527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b828410610bde575050508101602001610719826104ae610709565b80546020858701810191909152909301928101610bc3565b6001600160a01b03600254163303610c0a57565b60405162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152606490fd5b6040513d6000823e3d90fd5b908160209103126101a857516bffffffffffffffffffffffff811681036101a85790565b67ffffffffffffffff610cd69492602094610ca56001600160a01b036000541694610f1a565b9463ffffffff6040519889978896879663d227d24560e01b8852166004870152608060248701526084860190610696565b92166044840152606483015203915afa90811561088057600091610cf8575090565b6101c8915060203d8111610d19575b610d118183610113565b810190610c5b565b503d610d07565b60405190610d2d826100f2565b6000602083606081520152565b60405190610d47826100f2565b6000602083610d54610d20565b81520152565b60405190610d67826100f2565b600c82527f636f64654c6f636174696f6e00000000000000000000000000000000000000006020830152565b634e487b7160e01b600052602160045260246000fd5b60021115610db357565b610d93565b60405190610dc5826100f2565b600882527f6c616e67756167650000000000000000000000000000000000000000000000006020830152565b60011115610db357565b60405190610e08826100f2565b600682527f736f7572636500000000000000000000000000000000000000000000000000006020830152565b60405190610e41826100f2565b60048252636172677360e01b6020830152565b634e487b7160e01b600052601160045260246000fd5b6000198114610e795760010190565b610e54565b8051821015610e925760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b60405190610eb5826100f2565b600f82527f736563726574734c6f636174696f6e00000000000000000000000000000000006020830152565b60405190610eee826100f2565b600782527f73656372657473000000000000000000000000000000000000000000000000006020830152565b610f22610d3a565b90610f2d82516115fa565b50610f3f610f39610d5a565b83611d08565b610f5c8151610f4d81610da9565b610f5681610da9565b83611679565b610f67610f39610db8565b610f816040820151610f7881610df1565b610f5681610df1565b610f8c610f39610dfb565b610f9a606082015183611d08565b60a0810180515161103a575b506080810190815151610fbb575b5050515190565b602001908151610fca81610da9565b610fd381610da9565b156110285761100961102192610ff0610fea610ea8565b86611d08565b51610ffa81610da9565b61100381610da9565b84611679565b61101a611014610ee1565b84611d08565b5182611c52565b3880610fb4565b60405163a80d31f760e01b8152600490fd5b92611046611014610e34565b61104f83611d8d565b60005b8451805182101561107f579061107561106e8261107a94610e7e565b5186611d08565b610e6a565b611052565b5050925061108c82611e19565b38610fa6565b969594919093926110a1610bf6565b6040519460c0860186811067ffffffffffffffff82111761010e5760405260008652600060208701526110f4604087019960008b52606088019260608452606060808a0152606060a08a01523691610171565b9081511561115d57600061111c9a818952525280611141575b505080611125575b505061127c565b6101c881600455565b61113a9161113491369161089f565b82611195565b3880611115565b61115691611150913691610171565b8461116f565b388061110d565b6040516322ce3edd60e01b8152600490fd5b815115611183576001602082015260800152565b60405163e889636f60e01b8152600490fd5b8151156111a25760a00152565b60405163fe936cb760e01b8152600490fd5b604051906060820182811067ffffffffffffffff82111761010e57604052602982527f6c69656e74206c696200000000000000000000000000000000000000000000006040837f53656e64696e6720726571756573742066726f6d2066756e6374696f6e73206360208201520152565b908160209103126101a8575190565b9161126063ffffffff9167ffffffffffffffff604094979697168552606060208601526060850190610696565b9416910152565b908160209103126101a857516101c8816104b2565b6112d5929161129161128c6111b4565b612049565b60009384926112b36112ad610a9386546001600160a01b031690565b91610f1a565b94604051968780948193630a090ac160e21b83526020998a9860048501611233565b03925af19283156108805781936113ad575b508082611300610a93600494546001600160a01b031690565b604051635ab1bd5360e01b815293849182905afa9283156108805784937f1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db89361137b928492611380575b5050611360856000526001602052604060002090565b906001600160a01b03166001600160a01b0319825416179055565b80a290565b61139f9250803d106113a6575b6113978183610113565b810190611267565b388061134a565b503d61138d565b60049193506113d190833d85116113d8575b6113c98183610113565b810190611224565b92906112e7565b503d6113bf565b601f81116113eb575050565b600090600582527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0906020601f850160051c83019410611446575b601f0160051c01915b82811061143b57505050565b81815560010161142f565b9092508290611426565b601f811161145c575050565b600090600682527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f906020601f850160051c830194106114b7575b601f0160051c01915b8281106114ac57505050565b8181556001016114a0565b9092508290611497565b90815167ffffffffffffffff811161010e576114e7816114e2600654610639565b611450565b602080601f83116001146115235750819293600092611518575b50508160011b916000199060031b1c191617600655565b015190503880611501565b90601f1983169461155660066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90565b926000905b87821061159357505083600195961061157a575b505050811b01600655565b015160001960f88460031b161c1916905538808061156f565b8060018596829496860151815501950193019061155b565b90916115c26101c893604084526040840190610696565b916020818403910152610696565b601f19810191908211610e7957565b9060208201809211610e7957565b91908201809211610e7957565b611602610d20565b5061010060208201526040518082526000815261012081019081106101a85760405290565b90611630610d20565b50601f81168061165f575b50806020830152604051908183526000825281016020019081106101a85760405290565b60200360208111610e79578101809111610e79573861163b565b90815191611685610d20565b508251516001810190818111610e795760208501518110156116e0575b60c260206116d696519283010153805182116116d8575b5050604051916020830152602082526116d1826100f2565b611c52565b565b5238806116b9565b8160011b9482860460021483151715610e79576020816117126116d69861170b60c295519184611627565b5082611b9a565b50965050506116a2565b908160011b9180830460021490151715610e7957565b61173a610d20565b508051516001810190818111610e79576020830151811015611773575b605b6020845192830101538051821161176f57505090565b5290565b8160011b82810460021483151715610e795761179c9061179585519186611627565b5084611b9a565b50611757565b6117aa610d20565b508051516001810190818111610e795760208301518110156117df575b605a6020845192830101538051821161176f57505090565b8160011b82810460021483151715610e79576118019061179585519186611627565b506117c7565b61180f610d20565b508051516001810190818111610e79576020830151811015611844575b60596020845192830101538051821161176f57505090565b8160011b82810460021483151715610e79576118669061179585519186611627565b5061182c565b611874610d20565b508051516001810190818111610e795760208301518110156118a9575b60586020845192830101538051821161176f57505090565b8160011b82810460021483151715610e79576118cb9061179585519186611627565b50611891565b6118d9610d20565b508051516001810190818111610e7957602083015181101561190e575b607b6020845192830101538051821161176f57505090565b8160011b82810460021483151715610e79576119309061179585519186611627565b506118f6565b61193e610d20565b508051516001810190818111610e79576020830151811015611973575b607a6020845192830101538051821161176f57505090565b8160011b82810460021483151715610e79576119959061179585519186611627565b5061195b565b6119a3610d20565b508051516001810190818111610e795760208301518110156119d8575b60796020845192830101538051821161176f57505090565b8160011b82810460021483151715610e79576119fa9061179585519186611627565b506119c0565b611a08610d20565b508051516001810190818111610e79576020830151811015611a3d575b60786020845192830101538051821161176f57505090565b8160011b82810460021483151715610e7957611a5f9061179585519186611627565b50611a25565b90611a6e610d20565b508151516001810191828211610e79576020840151821015611aa1575b6020845192830101538051821161176f57505090565b8260011b83810460021484151715610e7957611aca90611ac386519187611627565b5085611b9a565b50611a8b565b90611add82519183611627565b50611ae6610d20565b50805190611af2610d20565b50611b008151831115611c4b565b82515192611b0e83856115ed565b916020928284809401518211611b83575b5183815197820101968211611b7b575b505001915b81811015611b555760001991036101000a0190811990511690825116179052565b9192611b70611b6a611b7692865181526115df565b946115df565b926115d0565b611b34565b523880611b2f565b611b95611b8f8361171c565b82611ad0565b611b1f565b90611ba3610d20565b508051611bae610d20565b50611bbc8251821115611c4b565b82515191611bca82846115ed565b6020918291828701518111611c34575b865183815197820101968211611c2c575b505001915b81811015611c125760001991036101000a019081199051169082511617905290565b9192611b70611b6a611c2792865181526115df565b611bf0565b523880611beb565b611c46611c408261171c565b88611ad0565b611bda565b156101a857565b8151611c8a92919067ffffffffffffffff81169060178211611c8d57611c829150604060ff845192161790611a65565b505b51611b9a565b50565b5060ff8111611cb257611cac90611ca4835161186c565b508251611fe3565b50611c84565b61ffff8111611cd157611cac90611cc98351611807565b508251611f7c565b63ffffffff8111611cf257611cac90611cea83516117a2565b508251611f13565b611cac90611d008351611732565b508251611ea6565b8151611c8a92919067ffffffffffffffff81169060178211611d3857611c829150606060ff845192161790611a65565b5060ff8111611d4f57611cac90611ca48351611a00565b61ffff8111611d6657611cac90611cc9835161199b565b63ffffffff8111611d7f57611cac90611cea8351611936565b611cac90611d0083516118d1565b805190611d98610d20565b508151516001810190818111610e79576020840151811015611de6575b609f6020809551928301015380518211611dde575b50500180519060018201809211610e795752565b523880611dca565b8160011b9382850460021483151715610e7957602081611e0f829761170b609f95519184611627565b5095505050611db5565b805190611e24610d20565b508151516001810190818111610e79576020840151811015611e73575b60ff6020809551928301015380518211611e6b575b5050018051600019810191908211610e795752565b523880611e56565b8160011b9382850460021483151715610e7957602081611e9c829761170b60ff95519184611627565b5095505050611e41565b90611eaf610d20565b50815151806008019182600811610e795760208401518311611ef2575b60088451928301019067ffffffffffffffff198251161790528051821161176f57505090565b8260011b83810460021484151715610e7957611f0e9085611ad0565b611ecc565b90611f1c610d20565b50815151806004019182600411610e795760208401518311611f5b575b60048451928301019063ffffffff198251161790528051821161176f57505090565b8260011b83810460021484151715610e7957611f779085611ad0565b611f39565b90611f85610d20565b50815151806002019182600211610e795760208401518311611fc2575b60028451928301019061ffff198251161790528051821161176f57505090565b8260011b83810460021484151715610e7957611fde9085611ad0565b611fa2565b90611fec610d20565b50815151806001019182600111610e795760208401518311612028575b60018451928301019060ff198251161790528051821161176f57505090565b8260011b83810460021484151715610e79576120449085611ad0565b612009565b6000809160405161208581612077602082019463104c13eb60e21b8652602060248401526044830190610696565b03601f198101835282610113565b51906a636f6e736f6c652e6c6f675afa5056fea2646970667358221220a68271812b77ce35c01ebf24c912b7aa64e073c460191e47787cf7ac07b7663964736f6c63430008120033";

type FunctionsConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FunctionsConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FunctionsConsumer__factory extends ContractFactory {
  constructor(...args: FunctionsConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    oracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(oracle, overrides || {});
  }
  override deploy(
    oracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(oracle, overrides || {}) as Promise<
      FunctionsConsumer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FunctionsConsumer__factory {
    return super.connect(runner) as FunctionsConsumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FunctionsConsumerInterface {
    return new Interface(_abi) as FunctionsConsumerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FunctionsConsumer {
    return new Contract(address, _abi, runner) as unknown as FunctionsConsumer;
  }
}
